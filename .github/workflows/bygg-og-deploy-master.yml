name: Bygg og deploy master

on:
  push:
    branches:
      - 'master'

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/${{ github.event.repository.name }}
  IMAGE: docker.pkg.github.com/${{ github.repository }}/${{ github.event.repository.name }}:${{ github.sha }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Installer avhengigheter (yarn install)
        run:  yarn install --ignore-scripts --no-optional


  bygg:
    name: Bygg
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    steps:
      - name: Lukk deployment-issues
        uses: actions/github-script@0.5.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['deploy']
            }).then(response => {
              response.data.forEach(issue => {
                github.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  state: 'closed'
                });
              });
            });
      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'
          cache: 'yarn'

      - name: Installer avhengigheter (yarn install)
        run:  yarn install --production --ignore-scripts --no-optional

      - name: Kj√∏r UU-tester (yarn lint)
        run: yarn lint

      - name: Bygg (yarn build)
        run: yarn build

      - name: Bygg, tag og push Docker-image
        run: |
          docker build --tag $IMAGE --tag $IMAGE_BASE:latest .
          echo $GITHUB_TOKEN | docker login docker.pkg.github.com -u $GITHUB_REPOSITORY --password-stdin
          docker push $IMAGE

      - name: Lag sentry release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          npx -p @sentry/cli sentry-cli releases new "${{ github.sha }}"
          npx -p @sentry/cli sentry-cli releases files "${{ github.sha }}" upload-sourcemaps build/static/js \
              --url-prefix '~/min-side-arbeidsgiver/static/js'
          npx -p @sentry/cli sentry-cli releases finalize "${{ github.sha }}"


  deploy-dev-gcp:
    name: Deploy til dev-gcp
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    needs: bygg
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Deploy til dev-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: naiserator-gcp.yaml
          PRINT_PAYLOAD: true
          VARS: nais/dev-gcp.json
          VAR: commit=${{ env.GITHUB_SHA }}

  deploy-prod-gcp:
    name: Deploy til prod-gcp
    runs-on: ubuntu-latest
    needs: bygg
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2
      - name: Deploy til prod-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: naiserator-gcp.yaml
          PRINT_PAYLOAD: true
          VARS: nais/prod-gcp.json
          VAR: commit=${{ env.GITHUB_SHA }}

  deploy-labs-gcp:
    name: Deploy til labs-gcp
    runs-on: ubuntu-latest
    needs: bygg
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Deploy til labs-gcp
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          RESOURCE: naiserator-gcp.yaml
          PRINT_PAYLOAD: true
          VARS: nais/labs-gcp.json
          VAR: commit=${{ env.GITHUB_SHA }}