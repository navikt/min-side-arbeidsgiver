name: Test, bygg, deploy
on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * 1' # bygg nytt image hver mandag morgen


jobs:
  build:
    name: Bygg
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: https://npm.pkg.github.com/
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile --prod
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
        working-directory: ./server

      - run: pnpm install --frozen-lockfile
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - run: pnpm run test
      - run: pnpm run lint
      - run: pnpm run build

      - uses: nais/docker-build-push@v0
        id: gar-push
        with:
          team: fager
          tag: ${{ github.sha }}

      - id: upload
        uses: nais/deploy/actions/cdn-upload/v2@master
        with:
          team: fager
          source: ./build/
          destination: '/min-side-arbeidsgiver'

    outputs:
      image: ${{ steps.gar-push.outputs.image }}

  deploy-dev-gcp:
    needs: [ build ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Deploy til dev-gcp
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais/dev-gcp.yaml
          PRINT_PAYLOAD: true
          VAR: commit=${{ github.sha }},image=${{ needs.build.outputs.image }}

  deploy-prod-gcp:
    needs: [ build ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Deploy til prod-gcp
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: nais/prod-gcp.yaml
          PRINT_PAYLOAD: true
          VAR: commit=${{ github.sha }},image=${{ needs.build.outputs.image }}

  deploy-prodlik-demo-gcp:
    needs: [ build ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Deploy prodlik demo til dev-gcp
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais/demo-prodlik.yaml
          PRINT_PAYLOAD: true
          VAR: commit=${{ github.sha }},image=${{ needs.build.outputs.image }}

  deploy-devlik-demo-gcp:
    needs: [ build ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Deploy dev-lik demo til dev-gcp
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais/demo-devlik.yaml
          PRINT_PAYLOAD: true
          VAR: commit=${{ github.sha }},image=${{ needs.build.outputs.image }}
